{
	"info": {
		"_postman_id": "a0c4891a-77b7-4e2a-818b-c0bd5af1a0ca",
		"name": "Share-Hub Unina API",
		"description": "Descrizione degi RESTful API endpoints dell'app Share-Hub Unina",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33868941"
	},
	"item": [
		{
			"name": "courses",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is present in response\", function(){\r",
									"    pm.expect(pm.cookies.has('token')).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@unina.it\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Allows login, returns JWT authentication token to user"
					},
					"response": [
						{
							"name": "Logged in successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new course",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses"
							]
						},
						"description": "Creating a course. After creation, the userId field of the course will correspond to the id of the professor who is creating it. If an Admin is creating it, he can choose the userId he wants, as long as there is a user with that id"
					},
					"response": [
						{
							"name": "The course has been successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/courses?userId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses"
							],
							"query": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "The ID of the user to filter courses by (optional)"
								}
							]
						},
						"description": "Returns the list of courses, possibly held by the user to whom userId belongs"
					},
					"response": [
						{
							"name": "List of all courses (potentially filtered by user)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/courses?userId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter courses by (optional)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/courses?userId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter courses by (optional)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/courses?userId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter courses by (optional)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a course by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/courses/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the details of the course the specified id belongs to"
					},
					"response": [
						{
							"name": "Course found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a course by ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates the information about the course the specified id belongs to. The userId field of the course must match the id of the professor who is editing it"
					},
					"response": [
						{
							"name": "The course has been successfully updated.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden. Only admins and the Professor owner of this course can edit it.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a course by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/courses/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"courses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes the course that the specified id belongs to. The userId field of the course must match the id of the professor who is deleting it"
					},
					"response": [
						{
							"name": "The course has been successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden. Only admins and the Professor owner of this course can delete it.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"userId\": \"<number>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/courses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is not present in response\", function(){\r",
									"    pm.expect(pm.cookies.get('token')).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						},
						"description": "Allows log out, removes JWT authentication token"
					},
					"response": [
						{
							"name": "Logged out successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "files",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is present in response\", function(){\r",
									"    pm.expect(pm.cookies.has('token')).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@unina.it\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Allows login, returns JWT authentication token to user"
					},
					"response": [
						{
							"name": "Logged in successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new file",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files"
							]
						},
						"description": "Creating a file. A professor can only create a file if the file's courseId matches a course he or she teaches."
					},
					"response": [
						{
							"name": "The file has been successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files?courseId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files"
							],
							"query": [
								{
									"key": "courseId",
									"value": "<string>",
									"description": "The ID of the course to filter files by (optional)"
								}
							]
						},
						"description": "Returns a list of all files, optionally filtered for the specified courseId.The list is returned if the user is admin; or if the user is a professor and the files are part of one of his courses; or if the user is a student and the files are part of a course he is enrolled in"
					},
					"response": [
						{
							"name": "List of all the files.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files?courseId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "courseId",
											"value": "<string>",
											"description": "The ID of the course to filter files by (optional)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files?courseId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "courseId",
											"value": "<string>",
											"description": "The ID of the course to filter files by (optional)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files?courseId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "courseId",
											"value": "<string>",
											"description": "The ID of the course to filter files by (optional)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. (1) You are not the professor of this course so you cannot see its files. or (2) You are not enrolled in this course so you cannot see its files.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files?courseId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "courseId",
											"value": "<string>",
											"description": "The ID of the course to filter files by (optional)"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a file by id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the details of the file that the specified id belongs to. The file is returned if the user is admin; or if the user is a professor and the file is part of one of his courses; or if the user is a student and the file is part of a course in which he is enrolled"
					},
					"response": [
						{
							"name": "File found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. (1) You are not the professor that owns this file. Or (2) You are not enrolled in the course this file is from",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a file by ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/files/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates the information about the file that the specified id belongs to. The file is only modified if the user is admin; or if the user is professor and the file's courseId field matches a course he teaches. Also, the file's courseId field cannot be modified."
					},
					"response": [
						{
							"name": "The file has been successfully updated.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. (1) You are not the professor that owns this file, thus you cannot edit it. Or (2) You cannot modify the course of an existing file",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a file by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes the file that the specified id belongs to.The file is deleted only if the user is admin; or if the user is professor and the file's courseId field corresponds to a course he teaches"
					},
					"response": [
						{
							"name": "The file has been successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. You are not the professor that owns this file, thus you cannot delete it",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is not present in response\", function(){\r",
									"    pm.expect(pm.cookies.get('token')).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						},
						"description": "Allows log out, removes JWT authentication token"
					},
					"response": [
						{
							"name": "Logged out successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "reviews",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is present in response\", function(){\r",
									"    pm.expect(pm.cookies.has('token')).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@unina.it\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Allows login, returns JWT authentication token to user"
					},
					"response": [
						{
							"name": "Logged in successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews"
							]
						},
						"description": "Creating a review for the file with the specified id. A review can be created by a student only if the student is enrolled in the associated course or if the user is an admin. Each user can review each file only once."
					},
					"response": [
						{
							"name": "The review has been successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. (1) You can only review a file once. or (2) You can only review files if you are enrolled in the course the file is from",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reviews?userId=<string>&fileId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews"
							],
							"query": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "The ID of the user to filter reviews by (optional)"
								},
								{
									"key": "fileId",
									"value": "<string>",
									"description": "The ID of the file to filter reviews by (optional)"
								}
							]
						},
						"description": "Returns reviews, possibly filtered by the user who wrote them and/or the file they refer to. Reviews are returned if the user is admin; or if the user is a professor and the reviews are from a file that belongs to one of his courses; or if the user is a student and wrote the reviews himself"
					},
					"response": [
						{
							"name": "List of all the reviews (potentially filtered by userId and/or fileId).",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews?userId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter reviews by (optional)"
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the file to filter reviews by (optional)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews?userId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter reviews by (optional)"
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the file to filter reviews by (optional)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews?userId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter reviews by (optional)"
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the file to filter reviews by (optional)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. (1) You are trying to access reviews of a file and you are not the owner of the course the file is from. or (2) You are trying to access reviews of a file from a course you are not enrolled in",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews?userId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter reviews by (optional)"
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the file to filter reviews by (optional)"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a review by id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the review that the specified id belongs to. The review is returned if the user is admin; or if the user is a student and wrote the review"
					},
					"response": [
						{
							"name": "Review found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. You cannot see a review you did not write.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a review by id.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/reviews/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates the information about the review that the specified id belongs to. The review is modified if the user is admin; or if the user is the student who wrote the review. The user cannot modify the file or the user the review refers to"
					},
					"response": [
						{
							"name": "The review has been successfully updated.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. You cannot modify the fileId or the userId of a review.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileId\": \"<number>\",\n  \"userId\": \"<number>\",\n  \"rating\": \"<number>\",\n  \"text\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a review by id.",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reviews",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes the review that the specified id belongs to.The review is deleted if the user is admin; or if the user is the student who wrote the review"
					},
					"response": [
						{
							"name": "The review has been successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. You cannot delete a review you did not write.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is not present in response\", function(){\r",
									"    pm.expect(pm.cookies.get('token')).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						},
						"description": "Allows log out, removes JWT authentication token"
					},
					"response": [
						{
							"name": "Logged out successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "enrollments",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is present in response\", function(){\r",
									"    pm.expect(pm.cookies.has('token')).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@unina.it\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Allows login, returns JWT authentication token to user"
					},
					"response": [
						{
							"name": "Logged in successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new enrollment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"courseId\": \"<number>\",\n  \"userId\": \"<number>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/enrollments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments"
							]
						},
						"description": "Creating a course enrollment that matches the specified courseId.After creation, the userId field of the enrollment will match the id of the student who is creating it. If an Admin is creating it, he or she can choose any userId he or she wants, as long as there is a user with that id"
					},
					"response": [
						{
							"name": "The enrollment has been successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"userId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/enrollments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"userId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/enrollments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"<number>\",\n  \"userId\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/enrollments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all the enrollments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/enrollments?userId=<string>&courseId=<string>&fileId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments"
							],
							"query": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "The ID of the user to filter enrollments by (optional)"
								},
								{
									"key": "courseId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "fileId",
									"value": "<string>",
									"description": "The ID of the course to filter enrollments by (optional)"
								}
							]
						},
						"description": "Returns the list of registrations, possibly filtered by userId and/or courseId Registrations are returned if the user is admin; or if the user is a professor and the registrations are for a course he teaches; or if the user is a student and the registrations are related to him"
					},
					"response": [
						{
							"name": "List of all the enrollments (potentially filtered by userId and/or courseId).",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments?userId=<string>&courseId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter enrollments by (optional)"
										},
										{
											"key": "courseId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the course to filter enrollments by (optional)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments?userId=<string>&courseId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter enrollments by (optional)"
										},
										{
											"key": "courseId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the course to filter enrollments by (optional)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments?userId=<string>&courseId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter enrollments by (optional)"
										},
										{
											"key": "courseId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the course to filter enrollments by (optional)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. (1) You are not the owner of these enrollments. or (2) You are not the owner of this course, thus you cannot see its enrollments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments?userId=<string>&courseId=<string>&fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The ID of the user to filter enrollments by (optional)"
										},
										{
											"key": "courseId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "The ID of the course to filter enrollments by (optional)"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an enrollment by id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/enrollments/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the subscription that the specified id belongs to The subscription is returned if the user is admin; or if the user is the one who wrote the review"
					},
					"response": [
						{
							"name": "Enrollment found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. You cannot see the details of an enrollment if you're not the owner.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an enrollment by id.",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/enrollments/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"enrollments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes the membership that the specified id belongs to. The review is deleted if the user is admin; or if the user is the student who wrote the review"
					},
					"response": [
						{
							"name": "The enrollment has been successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Access denied. You cannot delete an enrollment that's not yours.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/enrollments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is not present in response\", function(){\r",
									"    pm.expect(pm.cookies.get('token')).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						},
						"description": "Allows log out, removes JWT authentication token"
					},
					"response": [
						{
							"name": "Logged out successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is present in response\", function(){\r",
									"    pm.expect(pm.cookies.has('token')).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@unina.it\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Allows login, returns JWT authentication token to user"
					},
					"response": [
						{
							"name": "Logged in successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all the users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Returns the list of all users"
					},
					"response": [
						{
							"name": "List of all the users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all the professors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/professors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"professors"
							]
						},
						"description": "Returns the list of all professors"
					},
					"response": [
						{
							"name": "List of all the professors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/professors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"professors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/professors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"professors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/professors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"professors"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get user by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the details of the user to whom the specified id belongs. Admins can view all user pages, professors and students can only view the pages related to all professors plus their own page"
					},
					"response": [
						{
							"name": "User found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden. Students can view only professors pages and their own.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update user by ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates the information about the user the specified id belongs to"
					},
					"response": [
						{
							"name": "The user has been successfully updated",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete user by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes the user that owns the specified id"
					},
					"response": [
						{
							"name": "The user has been successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is not present in response\", function(){\r",
									"    pm.expect(pm.cookies.get('token')).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						},
						"description": "Allows log out, removes JWT authentication token"
					},
					"response": [
						{
							"name": "Logged out successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is present in response\", function(){\r",
									"    pm.expect(pm.cookies.has('token')).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@unina.it\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Allows login, returns JWT authentication token to user"
					},
					"response": [
						{
							"name": "Logged in successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						},
						"description": "Allows the registration of a new user"
					},
					"response": [
						{
							"name": "Signup was successfull.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"name\": \"<string>\",\n  \"lastname\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signup"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Cookie 'token' is not present in response\", function(){\r",
									"    pm.expect(pm.cookies.get('token')).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/signout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signout"
							]
						},
						"description": "Allows log out, removes JWT authentication token"
					},
					"response": [
						{
							"name": "Logged out successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"signout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		}
	]
}